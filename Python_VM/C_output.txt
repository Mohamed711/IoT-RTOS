BOARD_SIZE = 8 ; 
 void under_attack(col,queens)  {  
left = right = col ; 
 for (r,c in reversed(queens))  {  
left,right = left-1,right+1 ; 
 if (c in (left,col,right))  {  
 return True ; 
 } 
 } 
 return False ; 
 } 
 void solve(n)  {  
 if (n==0)  {  
 return [[]] ; 
 } 
smaller_solutions = solve(n-1) ; 
 return solution ; 
 } 
ENDMARKER