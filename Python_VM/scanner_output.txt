NAME     BOARD_SIZE
=     =
NUMBER     8
NEWLINE     
def     def
NAME     under_attack
(     (
NAME     col
,     ,
NAME     queens
)     )
:     :
NEWLINE     
INDENT     INDENT
NAME     left
=     =
NAME     right
=     =
NAME     col
NEWLINE     
for     for
NAME     r
,     ,
NAME     c
in     in
NAME     reversed
(     (
NAME     queens
)     )
:     :
NEWLINE     
INDENT     INDENT
NAME     left
,     ,
NAME     right
=     =
NAME     left
-     -
NUMBER     1
,     ,
NAME     right
+     +
NUMBER     1
NEWLINE     
if     if
NAME     c
in     in
(     (
NAME     left
,     ,
NAME     col
,     ,
NAME     right
)     )
:     :
NEWLINE     
INDENT     INDENT
return     return
True     True
NEWLINE     
DEDENT     DEDENT
DEDENT     DEDENT
return     return
False     False
NEWLINE     
DEDENT     DEDENT
def     def
NAME     solve
(     (
NAME     n
)     )
:     :
NEWLINE     
INDENT     INDENT
if     if
NAME     n
==     =
NUMBER     0
:     :
NEWLINE     
INDENT     INDENT
return     return
[     [
[     [
]     ]
]     ]
NEWLINE     
DEDENT     DEDENT
NAME     smaller_solutions
=     =
NAME     solve
(     (
NAME     n
-     -
NUMBER     1
)     )
NEWLINE     
return     return
NAME     solution
NEWLINE     
DEDENT     DEDENT
